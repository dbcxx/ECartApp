@model ECartApp.ViewModel.ItemViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<script type="text/javascript">


    $(document).ready(function () {
        $("#btnSave").click(function () {
            saveItem();
        })

        $("#btnReset").click(function () {
            resetItem();
        })
    });

    function resetItem() {
        $("#CategoryId").val("0");
        $("#ItemCode").val("");
        $("#ItemName").val("");
        $("#Description").val("");
        $("#ItemPrice").val("");
        $("#ImagePath").val("");
    }

    function saveItem() {
        var formData = new FormData();
        formData.append("CategoryId", $("#CategoryId").val());
        formData.append("ItemCode", $("#ItemCode").val());
        formData.append("ItemName", $("#ItemName").val());
        formData.append("Description", $("#Description").val());
        formData.append("ItemPrice", $("#ItemPrice").val());
        formData.append("ImagePath", $("#ImagePath").get(0).files[0]);

        $.ajax({
            async: true,
            dataType: 'JSON',
            type: 'POST',
            contentType: false,
            processData: false,
            url: '/Item/Index',
            data: formData,
            success: function (data) {
                if (data.Success) {

                    alert(data.Message);
                    resetItem();
                }
                
            },
            error: function () {
                alert("problem adding data");
            }
        })
  
    }

</script>
<div class="container">
    <div class="col-md-4">
        <div class="form-group">
            Category :
            @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.CategorySelectListItem, "Value", "Text"), new { @class = "form-control" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Code :
            @Html.TextBoxFor(model => model.ItemCode, new { @class = "form-control" , autocomplete = "OFF"})
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Name :
            @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control", autocomplete = "OFF" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Description  :
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", autocomplete = "OFF" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Price :
            @Html.TextBoxFor(model => model.ItemPrice, new { @class = "form-control", autocomplete = "OFF" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Image Path :
            @Html.TextBoxFor(model => model.ImagePath, new { type = "File", @class = "form-control" })
        </div>
    </div>

    <div>
        <input type="button" value="save" name="Save" class="btn btn-primary" id="btnSave" />
        &nbsp;
        <input type="button" value="reset" name="Reset" class="btn btn-danger" id="btnReset"/>
    </div>
</div>

